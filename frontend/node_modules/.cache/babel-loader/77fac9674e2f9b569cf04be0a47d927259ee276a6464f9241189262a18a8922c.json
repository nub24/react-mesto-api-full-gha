{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nub24\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { useFormAndValidation } from '../hooks/useFormAndValidation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(_ref) {\n  _s();\n  let {\n    buttonText,\n    onAddPlace,\n    isOpen,\n    onClose\n  } = _ref;\n  const {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm\n  } = useFormAndValidation();\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      name: values.name,\n      link: values.link\n    });\n  }\n  useEffect(() => {\n    resetForm();\n  }, [isOpen, resetForm]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    buttonText: buttonText,\n    isOpen: isOpen && \"popup_active\",\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isDisabled: !isValid,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: errors.name ? 'form__input form__input_type_error' : 'form__input',\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"30\",\n        onChange: handleChange,\n        value: values.name || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `\n              form__input-error \n              ${!isValid ? 'form__input-error_visible' : ''}`,\n        children: errors.name || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        name: \"link\",\n        className: errors.link ? 'form__input form__input_type_error' : 'form__input',\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        required: true,\n        onChange: handleChange,\n        value: values.link || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `\n              form__input-error \n              ${!isValid ? 'form__input-error_visible' : ''}`,\n        children: errors.link || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"y+EeZz0UO6iqZg6aHO5dPImJ+X8=\", false, function () {\n  return [useFormAndValidation];\n});\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useEffect","PopupWithForm","useFormAndValidation","jsxDEV","_jsxDEV","AddPlacePopup","_ref","_s","buttonText","onAddPlace","isOpen","onClose","values","handleChange","errors","isValid","resetForm","handleSubmit","evt","preventDefault","name","link","title","onSubmit","isDisabled","children","className","type","placeholder","required","minLength","maxLength","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nub24/dev/react-mesto-api-full-gha/frontend/src/components/AddPlacePopup.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { useFormAndValidation } from '../hooks/useFormAndValidation'\r\n\r\n\r\nfunction AddPlacePopup({ buttonText, onAddPlace, isOpen, onClose }) {\r\n  const { values, handleChange, errors, isValid, resetForm } = useFormAndValidation();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({ \r\n      name: values.name,\r\n      link: values.link });\r\n  }\r\n\r\n  useEffect(() => {\r\n    resetForm();\r\n  }, [isOpen, resetForm])\r\n\r\n  return (\r\n    <PopupWithForm\r\n          name=\"add\"\r\n          title=\"Новое место\"\r\n          buttonText={buttonText}\r\n          isOpen={isOpen && \"popup_active\"}\r\n          onClose={onClose}\r\n          onSubmit={handleSubmit}\r\n          isDisabled={!isValid}\r\n        >\r\n          <div className=\"form__input-container\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={errors.name ? 'form__input form__input_type_error' : 'form__input'}\r\n              placeholder=\"Название\"\r\n              required\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              onChange={handleChange}\r\n              value={values.name || ''}\r\n            />\r\n            <span className={`\r\n              form__input-error \r\n              ${!isValid ? 'form__input-error_visible' : ''}`}\r\n            >{errors.name || ''}</span>\r\n            <input\r\n              type=\"url\"\r\n              name=\"link\"\r\n              className={errors.link ? 'form__input form__input_type_error' : 'form__input'}\r\n              placeholder=\"Ссылка на картинку\"\r\n              required\r\n              onChange={handleChange}\r\n              value={values.link || ''}\r\n            />\r\n            <span className={`\r\n              form__input-error \r\n              ${!isValid ? 'form__input-error_visible' : ''}`}>\r\n                {errors.link || ''}\r\n              </span>\r\n          </div>\r\n        </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}