{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nconst request = (url, options) => {\n  const fetchAddress = `${BASE_URL}/${url}`;\n  return fetch(fetchAddress, options).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  });\n};\nexport const register = (password, email) => {\n  return request('signup', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  });\n};\nexport const authorize = (password, email) => {\n  return request('signin', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  });\n};\nexport const checkToken = token => {\n  return request('users/me', {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + token\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","request","url","options","fetchAddress","fetch","then","res","ok","json","Promise","reject","status","register","password","email","method","headers","body","JSON","stringify","authorize","checkToken","token"],"sources":["C:/Users/nub24/dev/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\r\n\r\nconst request = (url, options) => {\r\n  const fetchAddress = `${BASE_URL}/${url}`;\r\n\r\n  return fetch(fetchAddress, options)\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json()\r\n      } else {\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n      }\r\n  })\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return request('signup', {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  })\r\n}\r\n\r\nexport const authorize = (password, email) => {\r\n  return request('signin', {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  })\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n  return request('users/me', {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": \"Bearer \" + token\r\n    }\r\n  })\r\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;EAChC,MAAMC,YAAY,GAAI,GAAEJ,QAAS,IAAGE,GAAI,EAAC;EAEzC,OAAOG,KAAK,CAACD,YAAY,EAAED,OAAO,CAAC,CAChCG,IAAI,CAACC,GAAG,IAAI;IACX,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAC/C;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOd,OAAO,CAAC,QAAQ,EAAE;IACvBe,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,SAAS,GAAGA,CAACP,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOd,OAAO,CAAC,QAAQ,EAAE;IACvBe,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOtB,OAAO,CAAC,UAAU,EAAE;IACzBe,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,SAAS,GAAGM;IAC/B;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}